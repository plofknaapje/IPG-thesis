df <- list.files("results/kp", full.names = TRUE, pattern="inverse_kp-payoffs-5-[0-9]+-items.csv", include.dirs = FALSE) %>%
map_dfr(read_csv)
ggplot(data=df, aes(x=o, colour=factor(n))) +
geom_line(aes(y=runtime)) +
geom_line(aes(y=error)) +
scale_y_continuous(
# Features of the first axis
name = "Running time (seconds)",
# Add a second axis and specify its features
sec.axis = sec_axis(~error, name="RAC")
)
df <- list.files("results/kp", full.names = TRUE, pattern="inverse_kp-payoffs-5-[0-9]+-items.csv", include.dirs = FALSE) %>%
map_dfr(read_csv)
ggplot(data=df, aes(x=o, colour=factor(n))) +
geom_line(aes(y=runtime)) +
geom_line(aes(y=error)) +
scale_y_continuous(
# Features of the first axis
name = "Running time (seconds)",
# Add a second axis and specify its features
sec.axis = sec_axis(~ . / 10, name="RAC")
)
df <- list.files("results/kp", full.names = TRUE, pattern="inverse_kp-payoffs-5-[0-9]+-items.csv", include.dirs = FALSE) %>%
map_dfr(read_csv)
ggplot(data=df, aes(x=o, colour=factor(n))) +
geom_line(aes(y=runtime)) +
geom_line(aes(y=error)) +
scale_y_continuous(
# Features of the first axis
name = "Running time (seconds)",
# Add a second axis and specify its features
sec.axis = sec_axis(~ . / 100, name="RAC")
)
df <- list.files("results/kp", full.names = TRUE, pattern="inverse_kp-payoffs-5-[0-9]+-items.csv", include.dirs = FALSE) %>%
map_dfr(read_csv)
runtime <- ggplot(data=df, aes(x=o, y=runtime, colour=factor(n))) +
geom_line(
error <- ggplot(data=df, aes(x=o, y=error, colour=factor(n))) +
geom_line()
ggarange(runtime, error, labels=c("Runtimes", "RAC"), ncol=1, nrow=2)
df <- list.files("results/kp", full.names = TRUE, pattern="inverse_kp-payoffs-5-[0-9]+-items.csv", include.dirs = FALSE) %>%
map_dfr(read_csv)
runtime <- ggplot(data=df, aes(x=o, y=runtime, colour=factor(n))) +
geom_line()
error <- ggplot(data=df, aes(x=o, y=error, colour=factor(n))) +
geom_line()
ggarange(runtime, error, labels=c("Runtimes", "RAC"), ncol=1, nrow=2)
df <- list.files("results/kp", full.names = TRUE, pattern="inverse_kp-payoffs-5-[0-9]+-items.csv", include.dirs = FALSE) %>%
map_dfr(read_csv)
runtime <- ggplot(data=df, aes(x=o, y=runtime, colour=factor(n))) +
geom_line()
error <- ggplot(data=df, aes(x=o, y=error, colour=factor(n))) +
geom_line()
plot_grid(runtime, error, labels=c("Runtimes", "RAC"), ncol=1, nrow=2)
require(grid)
df <- list.files("results/kp", full.names = TRUE, pattern="inverse_kp-payoffs-5-[0-9]+-items.csv", include.dirs = FALSE) %>%
map_dfr(read_csv)
runtime <- ggplot(data=df, aes(x=o, y=runtime, colour=factor(n))) +
geom_line()
error <- ggplot(data=df, aes(x=o, y=error, colour=factor(n))) +
geom_line()
grid.newpage()
grid.draw(rbind(ggplotGrob(runtime), ggplotGrob(error), size = "last"))
require(tidyverse)
local_kp <- function(filename, type) {
df = read_csv(filename)
dodge <- position_dodge(width=0.75)
ggplot(data = df, mapping = aes(y=factor(items), x=avg, group=factor(range), colour=factor(range))) +
geom_pointrange(aes(xmin=min, xmax=max), position = dodge, size=0.2) +
ylab("Number of items") +
xlab("Running time (seconds)") +
labs(caption="Dots indicate the mean running times and lines indicate minimum and maximum",
colour="Range")
}
local_kp("results/kp/local/local_inverse_kp-payoffs-30.csv", "payoff")
local_kp("results/kp/local/local_inverse_kp-payoffs-30.csv", "weight")
require(tidyverse)
local_kpg <- function(filename, type) {
df = read_csv(filename)
dodge <- position_dodge(width=0.75)
ggplot(data = df, mapping = aes(y=factor(items), x=avg, group=factor(range), colour=factor(range))) +
geom_pointrange(aes(xmin=min, xmax=max), position = dodge, size=0.2) +
ylab("Number of items") +
xlab("Running time (seconds)") +
labs(caption="Dots indicate the mean running times and lines indicate minimum and maximum",
colour="Range") +
facet_wrap(~players, ncol=1)
}
filename <- "results/kpg/local/local_inverse_kpg-payoffs-30-4-False.csv"
type <- "payoff"
local_kpg(filename, type)
require(grid)
df <- list.files("results/kp", full.names = TRUE, pattern="inverse_kp-payoffs-5-[0-9]+-items.csv", include.dirs = FALSE) %>%
map_dfr(read_csv)
runtime <- ggplot(data=df, aes(x=o, y=runtime, colour=factor(n))) +
geom_line() +
labs()
error <- ggplot(data=df, aes(x=o, y=error, colour=factor(n))) +
geom_line()
grid.newpage()
grid.draw(rbind(ggplotGrob(runtime), ggplotGrob(error), size = "last"))
require(tidyverse)
local_kp <- function(filename, type) {
df = read_csv(filename)
dodge <- position_dodge(width=0.75)
ggplot(data = df, mapping = aes(y=factor(items), x=avg, group=factor(range), colour=factor(range))) +
geom_point(position = dodge) +
geom_errorbarh(aes(xmin=min, xmax=max), position = dodge) +
ylab("Number of items") +
xlab("Running time (seconds)") +
labs(caption="Dots indicate the mean running times and lines indicate minimum and maximum",
colour="Range")
}
local_kp("results/kp/local/local_inverse_kp-payoffs-30.csv", "payoff")
require(tidyverse)
local_kp <- function(filename, type) {
df = read_csv(filename)
dodge <- position_dodge(width=0.75)
ggplot(data = df, mapping = aes(y=factor(items), x=avg, group=factor(range), colour=factor(range))) +
geom_pointrange(aes(xmin=min, xmax=max), position = dodge) +
ylab("Number of items") +
xlab("Running time (seconds)") +
labs(caption="Dots indicate the mean running times and lines indicate minimum and maximum",
colour="Range")
}
local_kp("results/kp/local/local_inverse_kp-payoffs-30.csv", "payoff")
require(tidyverse)
local_kp <- function(filename, type) {
df = read_csv(filename)
dodge <- position_dodge(width=0.75)
ggplot(data = df, mapping = aes(y=factor(items), x=avg, group=factor(range), colour=factor(range))) +
geom_pointrange(aes(xmin=min, xmax=max), position = dodge, size=0.25) +
ylab("Number of items") +
xlab("Running time (seconds)") +
labs(caption="Dots indicate the mean running times and lines indicate minimum and maximum",
colour="Range")
}
local_kp("results/kp/local/local_inverse_kp-payoffs-30.csv", "payoff")
require(grid)
global_kp <- function(str, type) {
df <- list.files("results/kp", full.names = TRUE, pattern=str, include.dirs = FALSE) %>%
map_dfr(read_csv)
runtime <- ggplot(data=df, aes(x=o, y=runtime, colour=factor(n))) +
geom_line() +
labs(x="Ob")
error <- ggplot(data=df, aes(x=o, y=error, colour=factor(n))) +
geom_line()
grid.newpage()
grid.draw(rbind(ggplotGrob(runtime), ggplotGrob(error), size = "last"))
}
str <- "inverse_kp-payoffs-5-[0-9]+-items.csv"
type <- "payoff"
global_kp(str, type)
require(grid)
global_kp <- function(str, type) {
df <- list.files("results/kp", full.names = TRUE, pattern=str, include.dirs = FALSE) %>%
map_dfr(read_csv)
runtime <- ggplot(data=df, aes(x=o, y=runtime, colour=factor(n))) +
geom_line() +
labs(x="observations")
error <- ggplot(data=df, aes(x=o, y=error, colour=factor(n))) +
geom_line() +
labs(x="observations")
grid.newpage()
grid.draw(rbind(ggplotGrob(runtime), ggplotGrob(error), size = "last"))
}
str <- "inverse_kp-payoffs-5-[0-9]+-items.csv"
type <- "payoff"
global_kp(str, type)
require(grid)
global_kp <- function(str, type) {
df <- list.files("results/kp", full.names = TRUE, pattern=str, include.dirs = FALSE) %>%
map_dfr(read_csv)
runtime <- ggplot(data=df, aes(x=o, y=runtime, colour=factor(n))) +
geom_line() +
theme(axis.title.x = element_blank(), axis.text.x = element_blank())
error <- ggplot(data=df, aes(x=o, y=error, colour=factor(n))) +
geom_line() +
labs(x="observations")
grid.newpage()
grid.draw(rbind(ggplotGrob(runtime), ggplotGrob(error), size = "last"))
}
str <- "inverse_kp-payoffs-5-[0-9]+-items.csv"
type <- "payoff"
global_kp(str, type)
require(grid)
global_kp <- function(str, type) {
df <- list.files("results/kp", full.names = TRUE, pattern=str, include.dirs = FALSE) %>%
map_dfr(read_csv)
runtime <- ggplot(data=df, aes(x=o, y=runtime, colour=factor(n))) +
geom_line() +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank())
error <- ggplot(data=df, aes(x=o, y=error, colour=factor(n))) +
geom_line() +
labs(x="observations")
grid.newpage()
grid.draw(rbind(ggplotGrob(runtime), ggplotGrob(error), size = "last"))
}
str <- "inverse_kp-payoffs-5-[0-9]+-items.csv"
type <- "payoff"
global_kp(str, type)
require(grid)
global_kp <- function(str, type) {
df <- list.files("results/kp", full.names = TRUE, pattern=str, include.dirs = FALSE) %>%
map_dfr(read_csv)
runtime <- ggplot(data=df, aes(x=o, y=runtime, colour=factor(n))) +
geom_line() +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank())
error <- ggplot(data=df, aes(x=o, y=error, colour=factor(n))) +
geom_line() +
labs(x="observations") +
theme(legend=element_blank())
grid.newpage()
grid.draw(rbind(ggplotGrob(runtime), ggplotGrob(error), size = "last"))
}
str <- "inverse_kp-payoffs-5-[0-9]+-items.csv"
type <- "payoff"
global_kp(str, type)
require(grid)
global_kp <- function(str, type) {
df <- list.files("results/kp", full.names = TRUE, pattern=str, include.dirs = FALSE) %>%
map_dfr(read_csv)
runtime <- ggplot(data=df, aes(x=o, y=runtime, colour=factor(n))) +
geom_line() +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank())
error <- ggplot(data=df, aes(x=o, y=error, colour=factor(n))) +
geom_line() +
labs(x="observations") +
theme(legend.position="none")
grid.newpage()
grid.draw(rbind(ggplotGrob(runtime), ggplotGrob(error), size = "last"))
}
str <- "inverse_kp-payoffs-5-[0-9]+-items.csv"
type <- "payoff"
global_kp(str, type)
require(grid)
global_kp <- function(str, type) {
df <- list.files("results/kp", full.names = TRUE, pattern=str, include.dirs = FALSE) %>%
map_dfr(read_csv)
runtime <- ggplot(data=df, aes(x=o, y=runtime, colour=factor(n))) +
geom_line() +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank())
error <- ggplot(data=df, aes(x=o, y=error, colour=factor(n))) +
geom_line() +
labs(x="observations") +
theme(legend.position="none")
grid.newpage()
grid.draw(rbind(ggplotGrob(runtime), ggplotGrob(error), size = "last"))
}
str <- "inverse_kp-payoffs-5-[0-9]+-items.csv"
type <- "payoff"
global_kp(str, type)
require(grid)
global_kp <- function(str, type) {
df <- list.files("results/kp", full.names = TRUE, pattern=str, include.dirs = FALSE) %>%
map_dfr(read_csv)
runtime <- ggplot(data=df, aes(x=o, y=runtime, colour=factor(n))) +
geom_line() +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank())
error <- ggplot(data=df, aes(x=o, y=error, colour=factor(n))) +
geom_line() +
labs(x="observations") +
scale_color_discrete(guide="none")
grid.newpage()
grid.draw(rbind(ggplotGrob(runtime), ggplotGrob(error), size = "last"))
}
str <- "inverse_kp-payoffs-5-[0-9]+-items.csv"
type <- "payoff"
global_kp(str, type)
require(grid)
global_kp <- function(str, type) {
df <- list.files("results/kp", full.names = TRUE, pattern=str, include.dirs = FALSE) %>%
map_dfr(read_csv)
runtime <- ggplot(data=df, aes(x=o, y=runtime, colour=factor(n))) +
geom_line() +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank())
error <- ggplot(data=df, aes(x=o, y=error, colour=factor(n))) +
geom_line() +
labs(x="observations")
grid.newpage()
grid.draw(rbind(ggplotGrob(runtime), ggplotGrob(error), size = "last"))
}
str <- "inverse_kp-payoffs-5-[0-9]+-items.csv"
type <- "payoff"
global_kp(str, type)
require(grid)
global_kp <- function(str, type) {
df <- list.files("results/kp", full.names = TRUE, pattern=str, include.dirs = FALSE) %>%
map_dfr(read_csv)
runtime <- ggplot(data=df, aes(x=o, y=runtime, colour=factor(n))) +
geom_line() +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank())
error <- ggplot(data=df, aes(x=o, y=error, colour=factor(n))) +
geom_line(show.legend = FALSE) +
labs(x="observations")
grid.newpage()
grid.draw(rbind(ggplotGrob(runtime), ggplotGrob(error), size = "last"))
}
str <- "inverse_kp-payoffs-5-[0-9]+-items.csv"
type <- "payoff"
global_kp(str, type)
require(grid)
global_kp <- function(str, type) {
df <- list.files("results/kp", full.names = TRUE, pattern=str, include.dirs = FALSE) %>%
map_dfr(read_csv)
runtime <- ggplot(data=df, aes(x=o, y=runtime, colour=factor(n))) +
geom_line() +
theme(axis.title.x = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank())
error <- ggplot(data=df, aes(x=o, y=error, colour=factor(n))) +
geom_line() +
labs(x="observations")
grid.newpage()
grid.draw(rbind(ggplotGrob(runtime), ggplotGrob(error), size = "last"))
}
str <- "inverse_kp-payoffs-5-[0-9]+-items.csv"
type <- "payoff"
global_kp(str, type)
View(df)
View(df)
str <- "inverse_kp-payoffs-5-[0-9]+-items.csv"
type <- "payoff"
#  global_kp(str, type)
df <- list.files("results/kp", full.names = TRUE, pattern=str, include.dirs = FALSE) %>%
map_dfr(read_csv) %>%
pivot_longer(c(`runtime`,`error`), names_to="measurement", values_to="value")
ggplot(data=df, aes(x=o, y=value, colour=n)) +
geom_line() +
facet_grid(measurement ~ ., scales="free_y")
str <- "inverse_kp-payoffs-5-[0-9]+-items.csv"
type <- "payoff"
#  global_kp(str, type)
df <- list.files("results/kp", full.names = TRUE, pattern=str, include.dirs = FALSE) %>%
map_dfr(read_csv) %>%
pivot_longer(c(`runtime`,`error`), names_to="measurement", values_to="value")
ggplot(data=df, aes(x=o, y=value, colour=factor(n))) +
geom_line() +
facet_grid(measurement ~ ., scales="free_y")
require(grid)
global_kp <- function(str, type) {
df <- list.files("results/kp", full.names = TRUE, pattern=str, include.dirs = FALSE) %>%
map_dfr(read_csv) %>%
pivot_longer(c(`runtime`,`error`), names_to="measurement", values_to="value")
ggplot(data=df, aes(x=o, y=value, colour=factor(n))) +
geom_line() +
facet_grid(measurement ~ ., scales="free_y") +
labs(x="observations", colour="number of items")
}
str <- "inverse_kp-payoffs-5-[0-9]+-items.csv"
type <- "payoff"
global_kp(str, type)
require(grid)
global_kp <- function(str, type) {
df <- list.files("results/kp", full.names = TRUE, pattern=str, include.dirs = FALSE) %>%
map_dfr(read_csv) %>%
pivot_longer(c(`runtime`,`error`), names_to="measurement", values_to="value")
ggplot(data=df, aes(x=o, y=value, colour=factor(n))) +
geom_line() +
facet_grid(measurement ~ ., scales="free_y") +
labs(x="observations", colour="items")
}
str <- "inverse_kp-payoffs-5-[0-9]+-items.csv"
type <- "payoff"
global_kp(str, type)
filename <- "results/kpg/local/local_inverse_kpg-weights-30-4-False.csv"
type <- "weight"
local_kpg(filename, type)
require(tidyverse)
local_kp <- function(filename, type) {
df = read_csv(filename)
dodge <- position_dodge(width=0.75)
ggplot(data = df, mapping = aes(y=factor(items), x=avg, group=factor(range), colour=factor(range))) +
geom_pointrange(aes(xmin=min, xmax=max), position = dodge, size=0.25) +
ylab("items") +
xlab("running time (seconds)") +
labs(caption="Dots indicate the mean running times and lines indicate minimum and maximum.",
colour="range")
}
local_kp("results/kp/local/local_inverse_kp-payoffs-30.csv", "payoff")
local_kp("results/kp/local/local_inverse_kp-payoffs-30.csv", "weight")
require(tidyverse)
player_labs <- as_labeller(
c(`2` = "2 players", `3` = "3 players", `4` = "4 players"))
local_kpg <- function(filename, type) {
df = read_csv(filename)
dodge <- position_dodge(width=0.75)
ggplot(data = df, mapping = aes(y=factor(items), x=avg, group=factor(range), colour=factor(range))) +
geom_point(position = dodge) +
geom_pointrange(aes(xmin=min, xmax=max), position = dodge, size=0.2) +
ylab("items") +
xlab("running time (seconds)") +
labs(caption="Dots indicate the mean running times and lines indicate minimum and maximum",
colour="range") +
facet_wrap(~players, ncol=1, labeller=player_labs)
}
filename <- "results/kpg/local/local_inverse_kpg-payoffs-30-4-False.csv"
type <- "payoff"
local_kpg(filename, type)
filename <- "results/kpg/local/local_inverse_kpg-weights-30-4-False.csv"
type <- "weight"
local_kpg(filename, type)
require(grid)
global_kp <- function(str, type) {
df <- list.files("results/kp", full.names = TRUE, pattern=str, include.dirs = FALSE) %>%
map_dfr(read_csv) %>%
pivot_longer(c(`runtime`,`error`), names_to="measurement", values_to="value")
ggplot(data=df, aes(x=o, y=value, colour=factor(n))) +
geom_line() +
facet_grid(measurement ~ ., scales="free_y", ) +
labs(x="observations", colour="items")
}
str <- "inverse_kp-payoffs-5-[0-9]+-items.csv"
type <- "payoff"
global_kp(str, type)
require(grid)
measurement_labs = as_labeller(c(`error`="RAC", `runtime`="running time (seconds)"))
global_kp <- function(str, type) {
df <- list.files("results/kp", full.names = TRUE, pattern=str, include.dirs = FALSE) %>%
map_dfr(read_csv) %>%
pivot_longer(c(`runtime`,`error`), names_to="measurement", values_to="value")
ggplot(data=df, aes(x=o, y=value, colour=factor(n))) +
geom_line() +
facet_grid(measurement ~ ., scales="free_y", labeller=measurement_labs) +
labs(x="observations", colour="items")
}
str <- "inverse_kp-payoffs-5-[0-9]+-items.csv"
type <- "payoff"
global_kp(str, type)
require(grid)
measurement_labs = as_labeller(c(`error`="RAC", `runtime`="running time (seconds)"))
global_kp <- function(str, type) {
df <- list.files("results/kp", full.names = TRUE, pattern=str, include.dirs = FALSE) %>%
map_dfr(read_csv) %>%
pivot_longer(c(`runtime`,`error`), names_to="measurement", values_to="value")
ggplot(data=df, aes(x=o, y=value, colour=factor(n))) +
geom_line() +
facet_grid(measurement ~ ., scales="free_y", labeller=measurement_labs) +
labs(x="observations", y="", colour="items", )
}
str <- "inverse_kp-payoffs-5-[0-9]+-items.csv"
type <- "payoff"
global_kp(str, type)
str <- "inverse_kp-weights-5-[0-9]+-items.csv"
type <- "weight"
global_kp(str, type)
measurement_labs = as_labeller(c(`error`="RAC", `runtime`="running time (seconds)"))
global_kp <- function(type) {
str <- paste("inverse_kp-", type, "-5-[0-9]+-items.csv", sep="")
df_fixed <- list.files("results/kp", full.names = TRUE, pattern=str, include.dirs = FALSE) %>%
map_dfr(read_csv) %>%
pivot_longer(c(`runtime`,`error`), names_to="measurement", values_to="value")
df_fixed$cap <- "fixed"
str <- paste("inverse_kp-", type, "-5-[0-9]+-items-rc.csv", sep="")
df_random <- list.files("results/kp", full.names = TRUE, pattern=str, include.dirs = FALSE) %>%
map_dfr(read_csv) %>%
pivot_longer(c(`runtime`,`error`), names_to="measurement", values_to="value")
df_random$cap <- "random"
df <- bind_rows(df_fixed, df_random)
ggplot(data=df, aes(x=o, y=value, colour=factor(n), linetype=cap)) +
geom_line() +
facet_grid(measurement ~ ., scales="free_y", labeller=measurement_labs) +
labs(x="observations", y="",
colour="items")
}
type <- "payoffs"
global_kp(type)
measurement_labs = as_labeller(c(`error`="RAC", `runtime`="running time (seconds)"))
global_kp <- function(type) {
str <- paste("inverse_kp-", type, "-5-[0-9]+-items.csv", sep="")
df_fixed <- list.files("results/kp", full.names = TRUE, pattern=str, include.dirs = FALSE) %>%
map_dfr(read_csv) %>%
pivot_longer(c(`runtime`,`error`), names_to="measurement", values_to="value")
df_fixed$cap <- "fixed"
str <- paste("inverse_kp-", type, "-5-[0-9]+-items-rc.csv", sep="")
df_random <- list.files("results/kp", full.names = TRUE, pattern=str, include.dirs = FALSE) %>%
map_dfr(read_csv) %>%
pivot_longer(c(`runtime`,`error`), names_to="measurement", values_to="value")
df_random$cap <- "random"
df <- bind_rows(df_fixed, df_random)
ggplot(data=df, aes(x=o, y=value, colour=factor(n), linetype=cap)) +
geom_line() +
facet_grid(measurement ~ ., scales="free_y", labeller=measurement_labs) +
labs(x="observations", y="",
colour="items") +
scale_x_log10()
}
type <- "payoffs"
global_kp(type)
measurement_labs = as_labeller(c(`error`="RAC", `runtime`="running time"))
global_kp <- function(type) {
str <- paste("inverse_kp-", type, "-5-[0-9]+-items.csv", sep="")
df_fixed <- list.files("results/kp", full.names = TRUE, pattern=str, include.dirs = FALSE) %>%
map_dfr(read_csv) %>%
pivot_longer(c(`runtime`,`error`), names_to="measurement", values_to="value")
df_fixed$cap <- "fixed"
str <- paste("inverse_kp-", type, "-5-[0-9]+-items-rc.csv", sep="")
df_random <- list.files("results/kp", full.names = TRUE, pattern=str, include.dirs = FALSE) %>%
map_dfr(read_csv) %>%
pivot_longer(c(`runtime`,`error`), names_to="measurement", values_to="value")
df_random$cap <- "random"
df <- bind_rows(df_fixed, df_random)
ggplot(data=df, aes(x=o, y=value, colour=factor(n), linetype=cap)) +
geom_line() +
facet_grid(measurement ~ ., scales="free_y", labeller=measurement_labs) +
labs(x="observations", y="",
colour="items", linetype="capacity") +
scale_x_log10()
}
str <- "inverse_kp-weights-5-[0-9]+-items.csv"
type <- "weight"
global_kp(str, type)
type <- "weights"
global_kp(type)
